//Script GUID:05f85c64-1b0f-4420-9c4c-904c30844fc5
//Used for tracking history
             
a = 
SSTREAM 
SPARSE STREAMSET @"/shares/AzureAnalytics.Dev/AzureAnalytics.Dev.PublishedData/Microsoft.Cloud.MCIO/AzureDeployments/"             
PATTERN @"/%Y/%m/Data_%Y_%m_%d.ss"
RANGE __date = ["2015-06-17","2015-06-17"];

lt_snapshot =
    SELECT DeploymentGUID,
           DeploymentCreateTimestamp,
           AuditCreateDate,
           DeploymentType
           
    FROM a
    WHERE DeploymentStatus=="Running";

OUTPUT lt_snapshot TO @"/my/jobs/DeploymentLifetime/running_snapshot.txt" USING DefaultTextOutputter();
/*
lt_living =
    REDUCE lt_snapshot
    ON DeplooymentGUID
    PRODUCE DeploymentGUID,
            LivingTime,
            LTGroup
    USING SampleReducer
    PRESORT DeploymentCreateTimestamp;


#CS

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

public class SampleReducer : Reducer
{

     public override Schema Produces(string[] columns, string[] args, Schema input)

     {

          return new Schema("DeploymentGUID:string, LivingTime: TimeSpan");  

     }

 

    public override IEnumerable<Row> Reduce(RowSet input, Row output, string[] args)
    {
        
          bool first = true;

          string DeploymentGUID = "";

          TimeSpan livingTime=new TimeSpan();
          DateTime lastTime=new DateTime(2015,06,17);
          if (input.RowCount == 1) 
          { 
              foreach (Row row in input.Rows)

              {
                    


                  { 
                       LogicalContainerId=row[0].String;

                       initTime=row[1].DateTime;
                       lastTime=row[1].DateTime;
                   
                       first = false;

                  }
                  else {
                      lastTime=row[1].DateTime;
                  }

              
              }
            }

          output[0].Set(LogicalContainerId);

          output[1].Set(initTime);

          output[2].Set(lastTime);

          yield return output;

     }

}
#ENDCS
 */   

// Generated by ScopeStudio, version 1.8.0000.3!
