//Script GUID:680049a1-bea8-4cf9-bd43-8e94ea758b19
//Used for tracking history
REFERENCE @"System.Xml.dll";

MODULE @"/shares/AzureAnalytics.Prod/Sdk/AzureAnalytics1.3.module" AS AzureAnalytics;             
             
 AzureAnalytics.Initialize(             
	entity = "Microsoft.Cloud.facounterfiveminutenode");             
             
 pc = AzureAnalytics.LoadStream(             
	entity = "Microsoft.Cloud.facounterfiveminutenode",             
	startDateTime = "2015-03-01",
	endDateTime = "2015-03-02");       
 
 ev = AzureAnalytics.LoadStream(             
	entity = "Microsoft.Cloud.faOsvhddiskeventtable",             
	startDateTime = "2015-03-01",
	endDateTime = "2015-03-02");      
 
 //Scan of facounterfiveminutenode stream.
 pc_stream = SELECT                        
	Cluster,
	CounterName,
	CounterValue,
	DataCenter,
	NodeIdentity,
	PartitionKey,
	RowIndex,
	RowKey,
	SampleCount,
	SourceTableName,
	TIMESTAMP             
 FROM rs;
//
chop_PerfCounter =
    SELECT TIMESTAMP,
           NodeIdentity,
           RowIndex,
           RowKey,
           Cluster,
           DataCenter,
           Helper.GetOperationType(CounterName) AS OperationType,
           Helper.GetType(CounterName) AS counterType,
           Helper.GetVMID(CounterName) AS VMID,
           SampleCount,
           CounterValue,
           PartitionKey
    FROM pc_stream;

//Scan of faOsTable
faOsTable = 
SELECT 
    Helper.RoundUp(PreciseTimeStamp.GetValueOrDefault(DateTime.MaxValue), TimeSpan.FromMinutes(5)) AS PreciseTimeStamp,
    NodeIdentity,
    DataCenter,
    Cluster,
    Helper.GetCode(ParamBinary1) AS errCode,
    Helper.GetFlag(ParamBinary1) AS flag,
    EventId
    FROM mdstable
    WHERE Cluster == "DM2PrdApp02";
//Filter out Event17s of the two minute timeout variety.
event17s =
    SELECT TOP 50 *
    FROM faOsTable
    WHERE EventId == 17 AND errCode == "81700065"
    ORDER BY PreciseTimeStamp;
 

 
 
#CS
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using ScopeRuntime;

public class Helper
{
    public static String GetOperationType(String CounterName)
    {
        try{
            String[] stringSeparators=new string[]{"\\"};
            String[] a = CounterName.Split(stringSeparators, StringSplitOptions.RemoveEmptyEntries);
            return a[1];
        }
        catch(Exception e){
            return CounterName;
        }
    }
    public static String GetType(String CounterName){
        try{
            String[] stringSeparators=new string[]{"\\"};
            String[] typeSeparators=new string[]{"("};
            String[] a = CounterName.Split(stringSeparators, StringSplitOptions.RemoveEmptyEntries);
            String[] b = a[0].Split(typeSeparators, StringSplitOptions.RemoveEmptyEntries);
            return b[0];
        }
        catch(Exception e){
            return "NA";
        }
    }
    public static String GetVMID(String CounterName) {
        try{
            String[] stringSeparators=new string[]{"\\"};
            String[] typeSeparators=new string[]{"("};
            String[] a = CounterName.Split(stringSeparators, StringSplitOptions.RemoveEmptyEntries);
            String[] b = a[0].Split(typeSeparators, StringSplitOptions.RemoveEmptyEntries);
            return b[1].Remove(b[1].Length-1,1);
        }
        catch(Exception e) {
            return "NA";
        }
    }
}
#ENDCS