//Script GUID:21f6c942-3f22-4d42-af9a-f79015e93f54
//Used for tracking history

//Script GUID:91690179-67c2-4006-ad66-5f07caddf60e
//Used for tracking history


REFERENCE @"System.Xml.dll";
#DECLARE startDateTime string = "11/20/2014 12:00:00 AM";
MODULE @"/shares/AzureAnalytics.Prod/Sdk/AzureAnalytics1.3.module" AS AzureAnalytics;             

mdstable = AzureAnalytics.LoadStream(             
	entity = "Microsoft.Cloud.faOsvhddiskeventtable",             
	startDateTime = "2015-01-01",
	endDateTime = "2015-05-01");

faOsTable = 
SELECT 
    Helper.RoundUp(PreciseTimeStamp.GetValueOrDefault(DateTime.MaxValue), TimeSpan.FromMinutes(5)) AS PreciseTimeStamp,
    NodeIdentity,
    DataCenter,
    Cluster,
    Helper.GetCode(ParamBinary1) AS errCode,
    Helper.GetFlag(ParamBinary1) AS flag,
    EventId
    FROM mdstable;
//Filter out Event17s of the two minute timeout variety.
event17s =
    SELECT *
    FROM faOsTable
    WHERE EventId == 17 AND errCode == "81700065";

reduced_event17s =
    SELECT PreciseTimeStamp,
           NodeIdentity,
           Cluster,
           DataCenter,
           COUNT(*) AS Event17_Occurrence
    FROM event17s
    GROUP BY PreciseTimeStamp,
             NodeIdentity,
             Cluster,
             DataCenter;

OUTPUT reduced_event17s TO SSTREAM @"/my/jobs/Event17PerfCounter/Event17_all_2015.ss";

#CS
using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using ScopeRuntime;

public class Helper
{
    public static String GetCode(String paramBinary)
    {
        try{
            String a = paramBinary.Substring(40);
            String ErrorCode = a.Substring(6, 2) + a.Substring(4, 2) + a.Substring(2, 2) + a.Substring(0, 2);
            return ErrorCode;
        }
        catch(Exception e){
            return "NA";
        }
    }
    public static int GetFlag(String paramBinary){
        try{
            int flag = Convert.ToInt32(paramBinary.Substring(202,2), 16);
            return flag % 2;
        }
        catch(Exception e){
            return 2;
        }
    }
    public static DateTime RoundUp(DateTime dt, TimeSpan d)
    {
        return new DateTime(((dt.Ticks + d.Ticks - 1) / d.Ticks) * d.Ticks);
    }
}


#ENDCS

